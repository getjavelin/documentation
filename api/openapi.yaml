definitions:
  model.APIKey:
    properties:
      account_id:
        description: Account ID associated with the route
        type: string
      gateway_id:
        description: Gateway ID associated with the route
        type: string
      route:
        description: Route to be updated
        allOf:
          - $ref: '#/definitions/model.Route'
      route_names:
        description: Route Names to be updated
        type: array
        items:
          type: string
  model.Gateway:
    type: object
    properties:
      config:
        description: Configuration of the gateway
        type: object
      created_at:
        description: Creation timestamp
        type: string
      created_by:
        description: Creator of the gateway
        type: string
      enabled:
        description: Whether the gateway is enabled
        type: boolean
      gateway_id:
        description: Unique identifier for the gateway
        type: string
      modified_at:
        description: Modification timestamp
        type: string
      modified_by:
        description: Last modifier of the gateway
        type: string
      name:
        description: Name of the gateway
        type: string
      request_chain:
        description: Request from App to Model
        type: object
      response_chain:
        description: Response from Model to App
        type: object
      type:
        description: Type of the gateway
        type: string
  model.ModelConfig:
    type: object
    properties:
      fallback_codes:
        description: Fallback codes
        type: array
        items:
          type: integer
      fallback_enabled:
        description: Whether fallback is enabled
        type: boolean
      name:
        description: Name of the model
        type: string
      provider:
        description: Provider of the model
        type: string
      suffix:
        description: Suffix for the model
        type: string
      virtual_secret_key:
        description: Virtual secret name
        type: string
      weight:
        description: Weight of the model
        type: integer
  model.Provider:
    type: object
    properties:
      api_keys:
        description: API keys associated with the provider
        type: array
        items:
          type: object
      config:
        description: Configuration of the provider
        type: object
      created_at:
        description: Creation timestamp
        type: string
      created_by:
        description: Creator of the provider
        type: string
      display_name:
        description: Display name of the provider
        type: string
      enabled:
        description: Whether the provider is enabled
        type: boolean
      modified_at:
        description: Modification timestamp
        type: string
      modified_by:
        description: Last modifier of the provider
        type: string
      name:
        description: Name of the provider
        type: string
      type:
        description: Type of the provider
        type: string
      vault_enabled:
        description: Whether the provider's vault is enabled
        type: boolean
  model.ResponseMessage:
    type: object
    properties:
      message:
        type: string
  model.Route:
    type: object
    properties:
      config:
        description: Configuration of the route
        type: object
      created_at:
        description: Creation timestamp
        type: string
      created_by:
        description: Creator of the route
        type: string
      enabled:
        description: Whether the route is enabled
        type: boolean
      models:
        description: Models associated with the route
        type: array
        items:
          $ref: '#/definitions/model.ModelConfig'
      modified_at:
        description: Modification timestamp
        type: string
      modified_by:
        description: Last modifier of the route
        type: string
      name:
        description: Name of the route
        type: string
      type:
        description: Type of the route
        type: string
  model.Template:
    type: object
    properties:
      config:
        description: Template specific configuration
        type: object
      created_at:
        type: string
      created_by:
        type: string
      description:
        description: Description for the Template
        type: string
      enabled:
        description: Whether the Template is enabled or not
        type: boolean
      models:
        description: Models from spaCy, Cloud DLP etc.
        type: array
        items:
          $ref: '#/definitions/model.ModelConfig'
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        description: Short Name for the Template like "inspect", "deidentify", "reidentify" etc.
        type: string
      type:
        description: Type of the Template, e.g. spaCy, Cloud DLP etc.
        type: string
  modelspec.ModelSpecResponse:
    type: object
info:
  contact: {}
servers:
  - url: https://your-api-domain.com
paths:
  /v1/admin/dataprotection/templates:
    get:
      operationId: listTemplates
      consumes:
        - application/json
      description: Get a list of all templates
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.Template'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: No templates found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List all templates
      tags:
        - Data Protection
    post:
      operationId: createTemplate
      consumes:
        - application/json
      description: Add a new template with the specified details
      parameters:
        - name: templatename
          in: path
          description: Template Name
          required: true
          type: string
        - name: template
          in: body
          description: Template details
          required: true
          schema:
            $ref: '#/definitions/model.Template'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create template
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a new template
      tags:
        - Data Protection
    put:
      operationId: updateTemplate
      consumes:
        - application/json
      description: Update details of an existing template
      parameters:
        - name: templatename
          in: path
          description: Template Name
          required: true
          type: string
        - name: template
          in: body
          description: Template details
          required: true
          schema:
            $ref: '#/definitions/model.Template'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Template not found
          schema:
            type: string
        "500":
          description: Failed to update template
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update a template
      tags:
        - Data Protection
  /v1/admin/dataprotection/templates/{templatename}:
    delete:
      operationId: deleteTemplate
      consumes:
        - application/json
      description: Remove a template by name
      parameters:
        - name: templatename
          in: path
          description: Template Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Template not found
          schema:
            type: string
        "500":
          description: Failed to delete template
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a template
      tags:
        - Data Protection
    get:
      operationId: getTemplate
      consumes:
        - application/json
      description: Retrieve details of a specific template by name
      parameters:
        - name: templatename
          in: path
          description: Template Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Template'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Template not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get a specific template
      tags:
        - Data Protection
  /v1/admin/gateways:
    get:
      operationId: listGateways
      description: List all gateways
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Gateway'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: No gateways found
          schema:
            type: string
        "500":
          description: Failed to list gateways
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List all gateways
      tags:
        - Gateways
    post:
      operationId: createGateway
      consumes:
        - application/json
      description: Create a new gateway
      parameters:
        - name: gateway
          in: body
          description: Gateway details
          required: true
          schema:
            $ref: '#/definitions/model.Gateway'
      produces:
        - application/json
      responses:
        "200":
          description: Gateway created successfully
          schema:
            type: string
        "400":
          description: Gateway already exists
          schema:
            type: string
        "500":
          description: Failed to create gateway
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a new gateway
      tags:
        - Gateways
  /v1/admin/gateways/{gatewayname}:
    delete:
      operationId: deleteGateway
      description: Delete a gateway by name
      parameters:
        - name: gatewayname
          in: path
          description: Gateway Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Gateway deleted successfully
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Gateway not found
          schema:
            type: string
        "500":
          description: Failed to delete gateway
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a gateway by name
      tags:
        - Gateways
    get:
      operationId: getGateway
      description: Get a gateway by name
      parameters:
        - name: gatewayname
          in: path
          description: Gateway Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Gateway'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Gateway not found
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get a gateway by name
      tags:
        - Gateways
    put:
      operationId: updateGateway
      consumes:
        - application/json
      description: Update an existing gateway
      parameters:
        - name: gatewayname
          in: path
          description: Gateway Name
          required: true
          type: string
        - name: gateway
          in: body
          description: Gateway details
          required: true
          schema:
            $ref: '#/definitions/model.Gateway'
      produces:
        - application/json
      responses:
        "200":
          description: Gateway updated successfully
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update gateway
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update an existing gateway
      tags:
        - Gateways
  /v1/admin/modelspec:
    get:
      operationId: getModelSpec
      consumes:
        - application/json
      description: Get model specifications for a specific provider and model
      parameters:
        - name: provider_key
          in: query
          description: Provider Key
          required: true
          type: string
        - name: model_name
          in: query
          description: Model Name
          required: true
          type: string
        - name: api_base
          in: query
          description: API Base
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelspec.ModelSpecResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Model specification not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get model specifications
      tags:
        - Models
  /v1/admin/providers:
    get:
      operationId: listProviders
      consumes:
        - application/json
      description: Get a list of all providers
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.Provider'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: No providers found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List all providers
      tags:
        - Providers
    post:
      operationId: createProvider
      consumes:
        - application/json
      description: Add a new provider with the specified details
      parameters:
        - name: provider
          in: body
          description: Provider details
          required: true
          schema:
            $ref: '#/definitions/model.Provider'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create provider
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a new provider
      tags:
        - Providers
  /v1/admin/providers/{providername}:
    delete:
      operationId: deleteProvider
      consumes:
        - application/json
      description: Remove a provider by name
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Provider not found
          schema:
            type: string
        "500":
          description: Failed to delete provider
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a provider
      tags:
        - Providers
    get:
      operationId: getProvider
      consumes:
        - application/json
      description: Retrieve a specific provider by name
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Provider'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Provider not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get a specific provider
      tags:
        - Providers
    put:
      operationId: updateProvider
      consumes:
        - application/json
      description: Update an existing provider
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
        - name: provider
          in: body
          description: Provider details
          required: true
          schema:
            $ref: '#/definitions/model.Provider'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update provider
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update a provider
      tags:
        - Providers
  /v1/admin/providers/{providername}/secrets/{keyname}:
    delete:
      operationId: deleteApiKey
      consumes:
        - application/json
      description: Delete an API key by name
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
        - name: keyname
          in: path
          description: Key Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Failed to delete Key
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete an API key
      tags:
        - Secrets
    get:
      operationId: getApiKey
      consumes:
        - application/json
      description: Retrieve a specific API key by name
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
        - name: keyname
          in: path
          description: Key Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.APIKey'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Key not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get a specific API key
      tags:
        - Secrets
    post:
      operationId: createApiKey
      consumes:
        - application/json
      description: Create a new API key with the specified details
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
        - name: keyname
          in: path
          description: Key Name
          required: true
          type: string
        - name: apikey
          in: body
          description: API Key details
          required: true
          schema:
            $ref: '#/definitions/model.APIKey'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create key
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a new API key
      tags:
        - Secrets
    put:
      operationId: updateApiKey
      consumes:
        - application/json
      description: Update an existing API key
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
        - name: keyname
          in: path
          description: Key Name
          required: true
          type: string
        - name: apikey
          in: body
          description: API Key details
          required: true
          schema:
            $ref: '#/definitions/model.APIKey'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update apikey
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update an API key
      tags:
        - Secrets
  /v1/admin/providers/{providername}/secrets/keys:
    get:
      operationId: listApiKeys
      consumes:
        - application/json
      description: List all API keys
      parameters:
        - name: providername
          in: path
          description: Provider Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.APIKey'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: No key found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List API keys
      tags:
        - Secrets
  /v1/admin/routes:
    get:
      operationId: listRoutes
      consumes:
        - application/json
      description: Get a list of all routes by filter
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/model.Route'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: No routes found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List all routes by filter
      tags:
        - Routes
    post:
      operationId: createRoute
      consumes:
        - application/json
      description: Add a new route with the specified details
      parameters:
        - name: route
          in: body
          description: Route details
          required: true
          schema:
            $ref: '#/definitions/model.Route'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to create route
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a new route
      tags:
        - Routes
  /v1/admin/routes/{routename}:
    delete:
      operationId: deleteRoute
      consumes:
        - application/json
      description: Remove a route by name
      parameters:
        - name: routename
          in: path
          description: Route Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Route not found
          schema:
            type: string
        "500":
          description: Failed to delete route
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a route
      tags:
        - Routes
    get:
      operationId: getRoute
      consumes:
        - application/json
      description: Retrieve a specific route by name
      parameters:
        - name: routename
          in: path
          description: Route Name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Route'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Route not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get a specific route
      tags:
        - Routes
    put:
      operationId: updateRoute
      consumes:
        - application/json
      description: Update an existing route
      parameters:
        - name: routename
          in: path
          description: Route Name
          required: true
          type: string
        - name: route
          in: body
          description: Route details
          required: true
          schema:
            $ref: '#/definitions/model.Route'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update route
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update a route
      tags:
        - Routes
  /v1/admin/routes/bulk:
    put:
      operationId: bulkUpdateRoutes
      consumes:
        - application/json
      description: Update multiple routes with the same configuration in a single request
      parameters:
        - name: request
          in: body
          description: Bulk update request containing route names and shared configuration
          required: true
          schema:
            $ref: '#/definitions/model.BulkUpdateRoutesRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseMessage'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Failed to update routes
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Bulk update routes
      tags:
        - Routes
  /query/{routename}:
    post:
      consumes:
        - application/json
      description: Query data for a specific route
      parameters:
        - name: routename
          in: path
          description: Route name
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Query response
          schema:
            type: object
            additionalProperties: true
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Query a Route
      tags:
        - Query Routes
