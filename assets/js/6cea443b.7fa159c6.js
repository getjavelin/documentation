"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[747],{98589:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(74848),i=t(15680),a=t(21432);const o={},l="Quickstart Guide",s={id:"javelin-python/quickstart",title:"Quickstart Guide",description:"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client.",source:"@site/docs/javelin-python/quickstart.md",sourceDirName:"javelin-python",slug:"/javelin-python/quickstart",permalink:"/docs/javelin-python/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/getjavelin/documentation/tree/main/docs/javelin-python/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Prompt Playground",permalink:"/docs/javelin-core/playground/"},next:{title:"Data Model",permalink:"/docs/javelin-python/models"}},c={},u=[{value:"1. Installation",id:"1-installation",level:2},{value:"2. Setup",id:"2-setup",level:2},{value:"3. Making Requests",id:"3-making-requests",level:2},{value:"Fetching Data:",id:"fetching-data",level:3},{value:"Making an LLM Request:",id:"making-an-llm-request",level:3},{value:"4. Error Handling",id:"4-error-handling",level:2},{value:"5. Further Reading",id:"5-further-reading",level:2}];function p(e){const n={h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,i.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"quickstart-guide",children:"Quickstart Guide"}),"\n",(0,r.jsx)(n.p,{children:"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client."}),"\n",(0,r.jsx)(n.h2,{id:"1-installation",children:"1. Installation"}),"\n",(0,r.jsx)(n.p,{children:"To install the Javelin client, use pip:"}),"\n",(0,r.jsx)(a.A,{language:"python",title:"",children:"pip install javelin_sdk"}),"\n",(0,r.jsx)(n.h2,{id:"2-setup",children:"2. Setup"}),"\n",(0,r.jsx)(n.p,{children:"Before making any API calls, initialize the client:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Setting up the Python Client"})}),"\n",(0,r.jsx)(a.A,{language:"python",title:"",children:'from javelin_sdk\nfrom javelin_sdk import (\n    JavelinClient,\n    Route,\n    NetworkError\n)\n\nimport os, sys\n\ntry:\n    javelin_api_key = os.getenv(\'JAVELIN_API_KEY\')\n    llm_api_key = os.getenv("OPENAI_API_KEY")\n\n    client = JavelinClient(base_url="https://api-dev.javelin.live",\n                           javelin_api_key=javelin_api_key,\n                           llm_api_key=llm_api_key)\n\n    print(\'sucessfully connected to Javelin Client\')\n\nexcept NetworkError as e:\n    print("Failed to create client: Network Error")\n    sys.exit()\n'}),"\n",(0,r.jsx)(n.h2,{id:"3-making-requests",children:"3. Making Requests"}),"\n",(0,r.jsx)(n.p,{children:"With the client set up, you can make requests to the Javelin API:"}),"\n",(0,r.jsx)(a.A,{language:"python",title:"",children:'# Create a route object\nroute_data = {\n    "name": "test_route_1",\n    "type": "chat",\n    "models": [\n        {\n            "name": "gpt-3.5-turbo",\n            "enabled": True,\n            "provider": "openai",\n            "suffix": "/v1/chat/completions",\n        }\n    ],\n    "config": {\n        "archive": True,\n        "organization": "myusers",\n        "retries": 3,\n        "rate_limit": 7,\n    },\n}\n\n# serialize\nroute = Route.parse_obj(route_data)\n\n# create a route\ntry:\n    client.create_route(route)\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")\n'}),"\n",(0,r.jsx)(n.h3,{id:"fetching-data",children:"Fetching Data:"}),"\n",(0,r.jsx)(n.p,{children:"You can get configurations and other settings from Javelin through the SDK:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fetching configurations from Javelin"})}),"\n",(0,r.jsx)(a.A,{language:"python",title:"",children:'try:\n    client.get_route(route.name)\nexcept RouteNotFoundError as e:\n    print("Failed to get route: Route Not Found")\n'}),"\n",(0,r.jsx)(n.h3,{id:"making-an-llm-request",children:"Making an LLM Request:"}),"\n",(0,r.jsx)(n.p,{children:"Once Javelin has been setup, its easy to route your LLM calls through Javelin. Javelin supports both streaming and non-streaming responses to requests to popular LLMs."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Making a request to an LLM through Javelin"})}),"\n",(0,r.jsx)(a.A,{language:"python",title:"",children:'# create the object for the LLM request\nquery_data = {\n    "messages": [\n        {"role": "system", "content": "You are a helpful assistant."},\n        {"role": "user", "content": "Hello!"},\n    ],\n    "temperature": 0.8,\n}\n\n# query the LLM through the gateway\ntry:\n    response = client.query_route("test_route_1", query_data)\n    print(response)\nexcept UnauthorizedError as e:\n    print("Failed to query route: Unauthorized")\nexcept NetworkError as e:\n    print("Failed to query route: Network Error")\nexcept RouteNotFoundError as e:\n    print("Failed to query route: Route Not Found")'}),"\n",(0,r.jsx)(n.h2,{id:"4-error-handling",children:"4. Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"With the python SDK, handling errors is as easy as catching the appropriate exception. There are a number of helpful exceptions that the SDK throws for catching different error scenarios for robust client-side error handling. For example:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Creating a Route with Error Handling"})}),"\n",(0,r.jsx)(a.A,{language:"python",children:'try:\n    client.create_route(route)\n\nexcept UnauthorizedError as e:\n    print("Failed to create route: Unauthorized")\n\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")'}),"\n",(0,r.jsx)(n.h2,{id:"5-further-reading",children:"5. Further Reading"})]})}function h(e={}){const{wrapper:n}={...(0,i.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},15680:(e,n,t)=>{t.d(n,{RP:()=>c});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(t),d=i,g=h["".concat(s,".").concat(d)]||h[d]||u[d]||a;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));p.displayName="MDXCreateElement"}}]);