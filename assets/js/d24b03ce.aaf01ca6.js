"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4208],{49443:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});let t=JSON.parse('{"id":"javelin-redteam/configuration","title":"Configuration","description":"The Javelin RedTeam configuration system provides comprehensive control over scan parameters, target applications, vulnerability categories, and attack engines.","source":"@site/docs/javelin-redteam/configuration.md","sourceDirName":"javelin-redteam","slug":"/javelin-redteam/configuration","permalink":"/javelin-redteam/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-redteam/configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Architecture","permalink":"/javelin-redteam/architecture"},"next":{"title":"Categories","permalink":"/javelin-redteam/categories/overview"}}');var r=i(74848),s=i(28453);let c={},a="Configuration",o={},d=[{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"Application Configuration",id:"application-configuration",level:2},{value:"Basic Application Settings",id:"basic-application-settings",level:3},{value:"Scan Configuration",id:"scan-configuration",level:2},{value:"Category Selection",id:"category-selection",level:3},{value:"Configuration Validation",id:"configuration-validation",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function l(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,r.jsx)(n.p,{children:"The Javelin RedTeam configuration system provides comprehensive control over scan parameters, target applications, vulnerability categories, and attack engines."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,r.jsx)(n.p,{children:"The main configuration consists of several key sections:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Application under test\napp_config:\n  name: "MyApplication"\n  description: "Application description for context"\n  endpoint: "https://api.example.com/chat"\n\n# Scan parameters\nscan_config:\n  parameters:\n    maxScenarios: 10\n    timeout: 5\n    concurrency: 2\n    reportFormat: "markdown"\n    categories: ["data_privacy", "security"]\n\n# Framework-level settings (optional)\nframework:\n  database_url: "postgresql://..."\n  redis_url: "redis://..."\n  max_concurrent_scans: 2\n'})}),"\n",(0,r.jsx)(n.h2,{id:"application-configuration",children:"Application Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"basic-application-settings",children:"Basic Application Settings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'app_config:\n  name: "CustomerChatbot"\n  description: "A customer service chatbot that helps users with account inquiries, product information, and technical support."\n  endpoint: "https://api.example.com/chat"\n  method: "POST"  # Default: POST\n  headers:\n    Content-Type: "application/json"\n    Authorization: "Bearer ${API_TOKEN}"\n  payload_template:\n    query: "{{query}}"\n    user_id: "test_user"\n    session_id: "redteam_session"\n'})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Application name for reporting"}),(0,r.jsx)(n.td,{children:"Required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"description"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Detailed description of target app for context generation"}),(0,r.jsx)(n.td,{children:"Required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"endpoint"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Target HTTP endpoint URL"}),(0,r.jsx)(n.td,{children:"Required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"headers"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"HTTP headers to include"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"payload_template"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsxs)(n.td,{children:["Request payload template with ",(0,r.jsx)(n.code,{children:"{{query}}"})," placeholder"]}),(0,r.jsx)(n.td,{children:"Required"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"scan-configuration",children:"Scan Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Permissible Values"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"maxScenarios"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"1-1000"}),(0,r.jsx)(n.td,{children:"Test cases generated per category"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"timeout"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"1-300"}),(0,r.jsx)(n.td,{children:"Maximum scan duration in minutes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"concurrency"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"1-10"}),(0,r.jsx)(n.td,{children:"Parallel test execution count"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"reportFormat"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"markdown, json, pdf, html"}),(0,r.jsx)(n.td,{children:"Output format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"categories"})}),(0,r.jsx)(n.td,{children:"list"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/javelin-redteam/categories/overview#hierarchical-structure",children:"15 vulnerability categories"})}),(0,r.jsx)(n.td,{children:"List of vulnerability categories to test (e.g., data_privacy, security, responsible_ai, prompt_injection)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"category-selection",children:"Category Selection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'scan_config:\n  parameters:\n    categories:\n      # Core vulnerability categories\n      - "data_privacy"\n      - "responsible_ai"  \n      - "security"\n      - "brand_image"\n      - "illegal_risks"\n      \n      # OWASP LLM Top 10 categories\n      - "prompt_injection"\n      - "sensitive_information_disclosure"\n      - "supply_chain"\n      - "data_and_model_poisoning"\n      - "improper_output_handling"\n      - "excessive_agency"\n      - "system_prompt_leakage"\n      - "vector_and_embedding_weaknesses"\n      - "misinformation"\n      - "unbounded_consumption"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-validation",children:"Configuration Validation"}),"\n",(0,r.jsx)(n.p,{children:"Javelin RedTeam validates configuration before execution:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Validate configuration\njavelin-redteam validate --config conf/config.yaml\n\n# Test connectivity\njavelin-redteam test-connection --config conf/config.yaml\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start Simple"}),": Begin with basic categories and low test counts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Environment Separation"}),": Use different configs for dev/staging/prod"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Incremental Testing"}),": Gradually increase scope and complexity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Management"}),": Monitor concurrency and timeouts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Document custom configurations and rationale"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.p,{children:"Common configuration issues:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Invalid Categories"}),": Ensure category names match supported options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication Failures"}),": Verify API keys and permissions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timeout Issues"}),": Adjust timeout and concurrency settings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Limits"}),": Check framework limits for your deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Model Availability"}),": Ensure specified models are accessible"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var t=i(96540);let r={},s=t.createContext(r);function c(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);