"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2431],{4438:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>p});let i=JSON.parse('{"id":"javelin-core/features/fileinput","title":"Inline File Input","description":"Inline File Input Support Across Providers","source":"@site/docs/javelin-core/features/fileinput.md","sourceDirName":"javelin-core/features","slug":"/javelin-core/features/fileinput","permalink":"/javelin-core/features/fileinput","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-core/features/fileinput.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Model Playground","permalink":"/javelin-core/playground/"},"next":{"title":"Overview","permalink":"/javelin-core/secretsvault/overview"}}');var r=t(74848),a=t(28453),s=t(74235),o=t(15947);t(78667);let l={},d="Inline File Input",u={},p=[{value:"Inline File Input Support Across Providers",id:"inline-file-input-support-across-providers",level:2},{value:"Example: Inline File Input via Javelin Unified Endpoint",id:"example-inline-file-input-via-javelin-unified-endpoint",level:2}];function c(e){let n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"inline-file-input",children:"Inline File Input"})}),"\n",(0,r.jsx)(n.h2,{id:"inline-file-input-support-across-providers",children:"Inline File Input Support Across Providers"}),"\n",(0,r.jsxs)(n.p,{children:["Javelin provides a ",(0,r.jsx)(n.strong,{children:"unified interface"})," for working with inline file input (base64-encoded or inline reading) across all supported AI providers."]}),"\n",(0,r.jsx)(n.p,{children:"This allows developers to seamlessly pass files (documents, images, media, etc.) to models without needing provider-specific handling."}),"\n",(0,r.jsxs)(n.p,{children:["For details on ",(0,r.jsx)(n.strong,{children:"supported file types"})," and provider-specific limitations, please refer to the official documentation linked below."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Provider"}),(0,r.jsx)(n.th,{children:"Inline File Input Support"}),(0,r.jsx)(n.th,{children:"Official Documentation"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"OpenAI"})}),(0,r.jsx)(n.td,{children:"\u2705 Base64 inline"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://platform.openai.com/docs/guides/pdf-files?api-mode=responses#base64-encoded-files",children:"OpenAI File Guide"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Azure OpenAI"})}),(0,r.jsx)(n.td,{children:"\u2705 Responses API supports base64 inline"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/ai-foundry/openai/how-to/responses?utm_source=chatgpt.com&tabs=python-key#base64-encoded-image",children:"Azure Responses API"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Anthropic"})}),(0,r.jsx)(n.td,{children:"\u2705 Base64 inline"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://docs.claude.com/en/docs/build-with-claude/pdf-support#option-2%3A-base64-encoded-pdf-document",children:"Anthropic File Handling"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Amazon Bedrock"})}),(0,r.jsx)(n.td,{children:"\u2705 Inline reading"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://builder.aws.com/content/2i4v2vZRb9YgL2RxkawPiF8f0lZ/using-document-chat-with-the-amazon-bedrock-converse-api",children:"Bedrock Example"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Gemini"})}),(0,r.jsx)(n.td,{children:"\u2705 Inline reading"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://ai.google.dev/gemini-api/docs/document-processing#inline_data",children:"Gemini Inline Files"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{}),(0,r.jsx)(n.p,{children:"While Javelin ensures a consistent API experience, the exact file formats and size limits are defined by each provider. Please review their official documentation for the most up-to-date details."})]}),"\n",(0,r.jsx)(n.h2,{id:"example-inline-file-input-via-javelin-unified-endpoint",children:"Example: Inline File Input via Javelin Unified Endpoint"}),"\n","\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"OpenAI"}),(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"[Python]",children:'import requests, os, base64, mimetypes\n# Config\nJAVELIN_OPEN_API = "https://your-api-domain.com/v1/responses"\nOPENAI_KEY = os.getenv("OPENAI_KEY")\nJAVELIN_API_KEY = os.getenv("JAVELIN_API_KEY")\n\nFILE_PATH = "/your/path/to/pdf-file"\n\ndef get_base64(file_path):\n    with open(file_path, "rb") as f:\n        data = f.read()\n\n    return base64.b64encode(data).decode("utf-8")\n\nbase64_string = get_base64(FILE_PATH)\n\npayload = {\n    "model": "gpt-5",\n    "input": [\n        {\n            "role": "user",\n            "content": [\n                {"type": "input_text", "text": "What is this file about?"},\n                {\n                    "type": "input_file",\n                    "file_data": f"data:application/pdf;base64,{base64_string}",\n                    "filename": <your-file-name>,\n                },\n            ],\n        }\n    ],\n}\n\nheaders = {\n    "Authorization": f"Bearer {OPENAI_KEY}",\n    "Content-Type": "application/json",\n    "x-javelin-apikey": JAVELIN_API_KEY,\n    "x-javelin-route": "<your-javelin-unified-route>",\n}\n\nresp = requests.post(JAVELIN_OPEN_API, headers=headers, json=payload)\nresp.raise_for_status()\nprint("\\n=== Model Output ===")\nprint(resp.json().get("output_text", resp.json()))\n'})})}),(0,r.jsx)(o.A,{value:"Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"[Shell]",children:'curl -X POST "https://your-api-domain.com/v1/responses" \\\n-H "Authorization: Bearer $OPENAI_KEY" \\\n-H "x-javelin-apikey: $JAVELIN_API_KEY" \\\n-H "x-javelin-route: <your-javelin-unified-route>" \\\n-H "Content-Type: application/json" \\\n-d \'{\n    "model": "gpt-5",\n    "input": [\n    {\n        "role": "user",\n        "content": [\n        {\n            "type": "input_text", \n            "text": "What is this file about?"\n        },\n        {\n            "type": "input_file",\n            "file_data": "data:application/pdf;base64,BASE64_STRING_HERE",\n            "filename": "<your-file-name>"\n        }\n        ]\n    }\n    ]\n}\'\n'})})})]})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Azure OpenAI"}),(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"[Python]",children:'import requests, os, base64, mimetypes\n\n# Config\nJAVELIN_AZURE_API = "https://your-api-domain.com/v1/openai/responses?api-version=2025-04-01-preview"\nAZURE_OPENAI_KEY = os.getenv("AZURE_OPENAI_KEY")\nJAVELIN_API_KEY = os.getenv("JAVELIN_API_KEY")\n\nFILE_PATH = "/your/path/to/pdf-file"\n\ndef get_base64(file_path):\n    with open(file_path, "rb") as f:\n        data = f.read()\n\n    return base64.b64encode(data).decode("utf-8")\n\nbase64_string = get_base64(FILE_PATH)\n\npayload = {\n    "model": "gpt-5",\n    "input": [\n        {\n            "role": "user",\n            "content": [\n                {"type": "input_text", "text": "What is this file about?"},\n                {\n                    "type": "input_file",\n                    "file_data": f"data:{mime_type};base64,{base64_string}",\n                    "filename": filename,\n                },\n            ],\n        }\n    ],\n}\n\nheaders = {\n    "Api-Key": f"{AZURE_OPENAI_KEY}",\n    "Content-Type": "application/json",\n    "x-javelin-apikey": JAVELIN_API_KEY,\n    "x-javelin-route": "your-javelin-unified-route",\n}\n\nresp = requests.post(JAVELIN_AZURE_API, headers=headers, json=payload)\nresp.raise_for_status()\nprint("\\n=== Model Output ===")\nprint(resp.json().get("output_text", resp.json()))\n'})})}),(0,r.jsx)(o.A,{value:"Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"[Shell]",children:'curl -X POST "https://your-api-domain.com/v1/openai/responses?api-version=2025-04-01-preview" \\\n-H "Api-Key: $AZURE_OPENAI_KEY" \\\n-H "x-javelin-apikey: $JAVELIN_API_KEY" \\\n-H "x-javelin-route: <your-javelin-unified-route>" \\\n-H "Content-Type: application/json" \\\n-d \'{\n    "model": "gpt-5",\n    "input": [\n    {\n        "role": "user",\n        "content": [\n        {\n            "type": "input_text", \n            "text": "What is this file about?"\n        },\n        {\n            "type": "input_file",\n            "file_data": "data:application/pdf;base64,BASE64_STRING_HERE",\n            "filename": "sample.pdf"\n        }\n        ]\n    }\n    ]\n}\'\n'})})})]})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Amazon Bedrock"}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Amazon Bedrock works with both ",(0,r.jsx)(n.strong,{children:"base64-encoded files"})," and ",(0,r.jsx)(n.strong,{children:"raw inline files"}),".",(0,r.jsx)(n.br,{}),"\n","The example below demonstrates usage ",(0,r.jsx)(n.strong,{children:"without base64 encoding"}),"."]})}),(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:"[Python]",children:'import requests, os, base64\n\nmodel_id = "anthropic.claude-3-haiku-20240307-v1:0"\n\n# Config\nJAVELIN_AMAZON_API = f"https://your-api-domain.com/v1/model/{model_id}/converse"\nJAVELIN_API_KEY = os.getenv("JAVELIN_API_KEY")\n\nFILE_PATH = "/your/path/to/pdf-file"\n\ndef get_doc_bytes(file_path):\n    with open(file_path, "rb") as f:\n        data = f.read()\n\n    return data\n\ndoc_byte = get_doc_bytes(FILE_PATH)\n\npayload = {\n    "messages": [\n        {\n            "role": "user",\n            "content": [\n                {\n                    "text": "Briefly compare the models described in this document",\n                },\n                {\n                    "document": \n                    {\n                        "format": "pdf",\n                        "name": "Amazon Nova Service Cards", \n                        "source": {\n                            "bytes": doc_byte\n                    }\n                    }\n                }\n            ]\n        }\n    ]\n}\n\nheaders = {\n    "Content-Type": "application/json",\n    "x-javelin-apikey": JAVELIN_API_KEY,\n    "x-javelin-route": "<your-javelin-unified-route>"\n}\n\nresp = requests.post(JAVELIN_AMAZON_API, headers=headers, json=payload)\nresp.raise_for_status()\nprint("\\n=== Model Output ===")\nprint(resp.json().get("output_text", resp.json()))\n'})})}),(0,r.jsx)(o.A,{value:"Shell",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:"[Shell]",children:'curl -X POST "https://your-api-domain.com/v1/model/{model_id}/converse" \\\n-H "x-javelin-apikey: $JAVELIN_API_KEY" \\\n-H "x-javelin-route: <your-javelin-unified-route>" \\\n-H "Content-Type: application/json" \\\n-d \'{\n    "messages": [\n        {\n            "role": "user",\n            "content": [\n                {\n                    "text": "Briefly compare the models described in this document",\n                },\n                {\n                    "document": \n                    {\n                        "format": "pdf",\n                        "name": "Amazon Nova Service Cards", \n                        "source": {\n                            "bytes": "<BYTES_HERE>"\n                    }\n                    }\n                }\n            ]\n        }\n    ]\n}\'\n'})})})]})]})]})}function h(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},15947:(e,n,t)=>{t.d(n,{A:()=>a});var i=t(74848);t(96540);var r=t(18215);function a({children:e,hidden:n,className:t}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)("tabItem_Ymn6",t),hidden:n,children:e})}},74235:(e,n,t)=>{t.d(n,{A:()=>v});var i=t(74848),r=t(96540),a=t(18215),s=t(52204),o=t(56347),l=t(13321),d=t(57641),u=t(73094),p=t(57237);function c(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}var f=t(12075);function m({className:e,block:n,selectedValue:t,selectValue:r,tabValues:o}){let l=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),u=e=>{let n=e.currentTarget,i=o[l.indexOf(n)].value;i!==t&&(d(n),r(i))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{let t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1]}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:r})=>(0,i.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:p,onClick:u,...r,className:(0,a.A)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:t}){let s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=s.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function x(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:i}=e,a=function(e){let{values:n,children:t}=e;return(0,r.useMemo)(()=>{let e=n??c(t).map(({props:{value:e,label:n,attributes:t,default:i}})=>({value:e,label:n,attributes:t,default:i})),i=(0,u.XI)(e,(e,n)=>e.value===n.value);if(i.length>0)throw Error(`Docusaurus error: Duplicate values "${i.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[s,f]=(0,r.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:a})),[m,j]=function({queryString:e=!1,groupId:n}){let t=(0,o.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(i),(0,r.useCallback)(e=>{if(!i)return;let n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})},[i,t])]}({queryString:t,groupId:i}),[x,v]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,i]=(0,p.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&i.set(e)},[n,i])]}({groupId:i}),A=(()=>{let e=m??x;return h({value:e,tabValues:a})?e:null})();return(0,l.A)(()=>{A&&f(A)},[A]),{selectedValue:s,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);f(e),j(e),v(e)},[j,v,a]),tabValues:a}}(e);return(0,i.jsxs)("div",{className:(0,a.A)("tabs-container","tabList__CuJ"),children:[(0,i.jsx)(m,{...n,...e}),(0,i.jsx)(j,{...n,...e})]})}function v(e){let n=(0,f.A)();return(0,i.jsx)(x,{...e,children:c(e.children)},String(n))}}}]);