"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[747],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),y=a,d=c["".concat(u,".").concat(y)]||c[y]||g[y]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(8168),a=(n(6540),n(5680));const o={},i="Quickstart Guide",l={unversionedId:"javelin-python/quickstart",id:"javelin-python/quickstart",title:"Quickstart Guide",description:"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client.",source:"@site/docs/javelin-python/quickstart.md",sourceDirName:"javelin-python",slug:"/javelin-python/quickstart",permalink:"/docs/javelin-python/quickstart",draft:!1,editUrl:"https://github.com/getjavelin/documentation/tree/main/docs/javelin-python/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Custom Guardrails",permalink:"/docs/javelin-processors/custom"},next:{title:"Data Model",permalink:"/docs/javelin-python/models"}},u={},s=[{value:"1. Installation",id:"1-installation",level:2},{value:"2. Setup",id:"2-setup",level:2},{value:"3. Making Requests",id:"3-making-requests",level:2},{value:"Fetching Data:",id:"fetching-data",level:3},{value:"Making an LLM Request:",id:"making-an-llm-request",level:3},{value:"4. Error Handling",id:"4-error-handling",level:2},{value:"5. Further Reading",id:"5-further-reading",level:2}],p={toc:s},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"quickstart-guide"},"Quickstart Guide"),(0,a.yg)("p",null,"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client."),(0,a.yg)("h2",{id:"1-installation"},"1. Installation"),(0,a.yg)("p",null,"To install the Javelin client, use pip:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"pip install javelin_sdk\n")),(0,a.yg)("h2",{id:"2-setup"},"2. Setup"),(0,a.yg)("p",null,"Before making any API calls, initialize the client:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Setting up the Python Client")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'from javelin_sdk import (\n    JavelinClient,\n    Route\n)\n\nimport os\n\ntry:\n    javelin_api_key = os.getenv(\'JAVELIN_API_KEY\')\n    llm_api_key = os.getenv("OPENAI_API_KEY")\n\n    client = JavelinClient(javelin_api_key=javelin_api_key,\n                           llm_api_key=llm_api_key)\n\nexcept NetworkError as e:\n    print("Failed to create client: Network Error")\n    sys.exit()\n')),(0,a.yg)("h2",{id:"3-making-requests"},"3. Making Requests"),(0,a.yg)("p",null,"With the client set up, you can make requests to the Javelin API:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'\n# Create a route object\nroute_data = {\n    "name": "test_route_1",\n    "type": "chat",\n    "models": [\n        {\n            "name": "gpt-3.5-turbo",\n            "enabled": True,\n            "provider": "openai",\n            "suffix": "/v1/chat/completions",\n        }\n    ],\n    "config": {\n        "archive": True,\n        "organization": "myusers",\n        "retries": 3,\n        "rate_limit": 7,\n    },\n}\n\n# serialize\nroute = Route.parse_obj(route_data)\n\n# create a route\ntry:\n    client.create_route(route)\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")\n')),(0,a.yg)("h3",{id:"fetching-data"},"Fetching Data:"),(0,a.yg)("p",null,"You can get configurations and other settings from Javelin through the SDK:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fetching configurations from Javelin")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'try:\n    client.get_route(route.name)\nexcept RouteNotFoundError as e:\n    print("Failed to get route: Route Not Found")\n')),(0,a.yg)("h3",{id:"making-an-llm-request"},"Making an LLM Request:"),(0,a.yg)("p",null,"Once Javelin has been setup, its easy to route your LLM calls through Javelin. Javelin supports both streaming and non-streaming responses to requests to popular LLMs. "),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Making a request to an LLM through Javelin")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'\n# create the object for the LLM request \nquery_data = {\n    "messages": [\n        {"role": "system", "content": "You are a helpful assistant."},\n        {"role": "user", "content": "Hello!"},\n    ],\n    "temperature": 0.8,\n}\n\n# query the LLM through the gateway\ntry:\n    response = client.query_route("test_route_1", query_data)\n    print(response)\nexcept UnauthorizedError as e:\n    print("Failed to query route: Unauthorized")\nexcept NetworkError as e:\n    print("Failed to query route: Network Error")\nexcept RouteNotFoundError as e:\n    print("Failed to query route: Route Not Found")\n\n')),(0,a.yg)("h2",{id:"4-error-handling"},"4. Error Handling"),(0,a.yg)("p",null,"With the python SDK, handling errors is as easy as catching the appropriate exception. There are a number of helpful exceptions that the SDK throws for catching different error scenarios for robust client-side error handling. For example:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Creating a Route with Error Handling")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'\ntry:\n    client.create_route(route)\n\nexcept UnauthorizedError as e:\n    print("Failed to create route: Unauthorized")\n\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")\n\n')),(0,a.yg)("h2",{id:"5-further-reading"},"5. Further Reading"))}g.isMDXComponent=!0}}]);