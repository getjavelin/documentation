"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[747],{21543:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"javelin-python/quickstart","title":"Quickstart Guide","description":"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client.","source":"@site/docs/javelin-python/quickstart.md","sourceDirName":"javelin-python","slug":"/javelin-python/quickstart","permalink":"/docs/javelin-python/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-python/quickstart.md","tags":[],"version":"current","frontMatter":{},"sidebar":"someSidebar","previous":{"title":"Prompt Playground","permalink":"/docs/javelin-core/playground/"},"next":{"title":"Data Model","permalink":"/docs/javelin-python/models"}}');var i=t(74848),a=t(28453),o=t(3320);const s={},l="Quickstart Guide",u={},c=[{value:"1. Installation",id:"1-installation",level:2},{value:"2. Setup",id:"2-setup",level:2},{value:"3. Making Requests",id:"3-making-requests",level:2},{value:"Fetching Data:",id:"fetching-data",level:3},{value:"Making an LLM Request:",id:"making-an-llm-request",level:3},{value:"4. Error Handling",id:"4-error-handling",level:2}];function h(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"quickstart-guide",children:"Quickstart Guide"})}),"\n",(0,i.jsx)(n.p,{children:"The Javelin client is a Python library for interacting with the Javelin API. This guide provides a basic overview of setting up and using the Javelin client."}),"\n",(0,i.jsx)(n.h2,{id:"1-installation",children:"1. Installation"}),"\n",(0,i.jsx)(n.p,{children:"To install the Javelin client, use pip:"}),"\n",(0,i.jsx)(o.A,{language:"python",title:"",children:"pip install javelin_sdk"}),"\n",(0,i.jsx)(n.h2,{id:"2-setup",children:"2. Setup"}),"\n",(0,i.jsx)(n.p,{children:"Before making any API calls, initialize the client:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Setting up the Python Client"})}),"\n",(0,i.jsx)(o.A,{language:"python",title:"",children:'from javelin_sdk import (\n    JavelinClient,\n    JavelinConfig,\n    Route,\n    NetworkError\n)\n\nimport os, sys\n\ntry:\n    javelin_api_key = os.getenv(\'JAVELIN_API_KEY\')\n    llm_api_key = os.getenv("OPENAI_API_KEY")\n\n    config = JavelinConfig(\n        base_url="https://api.javelin.live",\n        javelin_api_key=javelin_api_key,\n        llm_api_key=llm_api_key,\n    )\n    client = JavelinClient(config)\n\n\n    print(\'sucessfully connected to Javelin Client\')\n\nexcept NetworkError as e:\n    print("Failed to create client: Network Error")\n    sys.exit()\n'}),"\n",(0,i.jsx)(n.h2,{id:"3-making-requests",children:"3. Making Requests"}),"\n",(0,i.jsx)(n.p,{children:"With the client set up, you can make requests to the Javelin API:"}),"\n",(0,i.jsx)(o.A,{language:"python",title:"",children:'# Create a route object\nroute_data = {\n    "name": "test_route_1",\n    "type": "chat",\n    "models": [\n        {\n            "name": "gpt-3.5-turbo",\n            "enabled": True,\n            "provider": "openai",\n            "suffix": "/v1/chat/completions",\n        }\n    ],\n    "config": {\n        "archive": True,\n        "organization": "myusers",\n        "retries": 3,\n        "rate_limit": 7,\n    },\n}\n\n# serialize\nroute = Route.parse_obj(route_data)\n\n# create a route\ntry:\n    client.create_route(route)\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")\n'}),"\n",(0,i.jsx)(n.h3,{id:"fetching-data",children:"Fetching Data:"}),"\n",(0,i.jsx)(n.p,{children:"You can get configurations and other settings from Javelin through the SDK:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Fetching configurations from Javelin"})}),"\n",(0,i.jsx)(o.A,{language:"python",title:"",children:'try:\n    client.get_route(route.name)\nexcept RouteNotFoundError as e:\n    print("Failed to get route: Route Not Found")\n'}),"\n",(0,i.jsx)(n.h3,{id:"making-an-llm-request",children:"Making an LLM Request:"}),"\n",(0,i.jsx)(n.p,{children:"Once Javelin has been setup, its easy to route your LLM calls through Javelin. Javelin supports both streaming and non-streaming responses to requests to popular LLMs."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Making a request to an LLM through Javelin"})}),"\n",(0,i.jsx)(o.A,{language:"python",title:"",children:'# create the object for the LLM request\nquery_data = {\n    "messages": [\n        {"role": "system", "content": "You are a helpful assistant."},\n        {"role": "user", "content": "Hello!"},\n    ],\n    "temperature": 0.8,\n}\n\n# query the LLM through the gateway\ntry:\n    response = client.query_route("test_route_1", query_data)\n    print(response)\nexcept UnauthorizedError as e:\n    print("Failed to query route: Unauthorized")\nexcept NetworkError as e:\n    print("Failed to query route: Network Error")\nexcept RouteNotFoundError as e:\n    print("Failed to query route: Route Not Found")'}),"\n",(0,i.jsx)(n.h2,{id:"4-error-handling",children:"4. Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"With the python SDK, handling errors is as easy as catching the appropriate exception. There are a number of helpful exceptions that the SDK throws for catching different error scenarios for robust client-side error handling. For example:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Creating a Route with Error Handling"})}),"\n",(0,i.jsx)(o.A,{language:"python",children:'try:\n    client.create_route(route)\n\nexcept UnauthorizedError as e:\n    print("Failed to create route: Unauthorized")\n\nexcept NetworkError as e:\n    print("Failed to create route: Network Error")'})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);