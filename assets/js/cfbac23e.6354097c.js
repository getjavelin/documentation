"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5208],{61566:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});let t=JSON.parse('{"id":"javelin-core/mcp-configuration","title":"MCP Configuration Guide","description":"Learn how to configure and manage MCP servers, tools, and security policies in the Javelin application.","source":"@site/docs/javelin-core/mcpconfiguration.md","sourceDirName":"javelin-core","slug":"/javelin-core/mcp-configuration","permalink":"/javelin-core/mcp-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-core/mcpconfiguration.md","tags":[],"version":"current","frontMatter":{"id":"mcp-configuration","title":"MCP Configuration Guide","sidebar_label":"Configuration","description":"Learn how to configure and manage MCP servers, tools, and security policies in the Javelin application."},"sidebar":"docsSidebar","previous":{"title":"Guides","permalink":"/javelin-core/route-usage-guide"},"next":{"title":"Guides","permalink":"/javelin-core/mcp-usage-guides"}}');var r=n(74848),s=n(28453);let d={id:"mcp-configuration",title:"MCP Configuration Guide",sidebar_label:"Configuration",description:"Learn how to configure and manage MCP servers, tools, and security policies in the Javelin application."},l="MCP Configuration Guide",c={},o=[{value:"Overview",id:"overview",level:2},{value:"MCP Registry Payload Example",id:"mcp-registry-payload-example",level:2},{value:"Field Descriptions",id:"field-descriptions",level:2},{value:"Policy Fields",id:"policy-fields",level:2},{value:"Tool Enable/Disable Payload",id:"tool-enabledisable-payload",level:2},{value:"Policy Precedence",id:"policy-precedence",level:2}];function a(e){let i={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"mcp-configuration-guide",children:"MCP Configuration Guide"})}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(i.p,{children:["In Javelin, ",(0,r.jsx)(i.strong,{children:"MCP registries"})," define how your gateway connects to external ",(0,r.jsx)(i.a,{href:"/javelin-core/mcp-overview",children:"Model Context Protocol (MCP)"})," servers and exposes their tools to applications.",(0,r.jsx)(i.br,{}),"\n","Each registry includes connection details, authentication credentials, and baseline policy controls. You can also selectively enable tools on a per-registry basis to safely extend application capabilities."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Register MCP",src:n(88657).A+"",width:"2378",height:"1624"})}),"\n",(0,r.jsx)(i.h2,{id:"mcp-registry-payload-example",children:"MCP Registry Payload Example"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yaml",children:'mcp_registry:\n  name: "deepwiki"                                # Unique server key\n  description: "Deepwiki MCP server"              # Optional description\n  type: "streamable-http"                         # MCP server transport/type\n  endpoint: "https://mcp.deepwiki.com/mcp"        # MCP server endpoint URL\n  is_active: true                                 # Enable/disable the registry\n  config:\n    authorization_token: "<SECRET_TOKEN>"         # Optional. Token used by MCP server, if needed\n  policy:\n    dlp:\n      enabled: false\n      strategy: ""\n    prompt_safety:\n      enabled: false\n      content_types: []\n      reject_prompt: ""\n    indirect_prompt_safety:\n      enabled: false\n      content_types: []\n      reject_prompt: ""\n'})}),"\n",(0,r.jsx)(i.h2,{id:"field-descriptions",children:"Field Descriptions"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Name"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"name"})}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsxs)(i.td,{children:["Unique key for this MCP server (e.g., ",(0,r.jsx)(i.code,{children:"deepwiki"}),")."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"description"})}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Human-readable description."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"type"})}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsxs)(i.td,{children:["MCP server type/transport (e.g., ",(0,r.jsx)(i.code,{children:"streamable-http"}),")."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"endpoint"})}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Base URL for the MCP server."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"is_active"})}),(0,r.jsx)(i.td,{children:"boolean"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"true"}),(0,r.jsx)(i.td,{children:"Whether the MCP registry is enabled."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"config.authorization_token"})}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Optional. Credential used to authenticate with the MCP server, if needed."})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"policy-fields",children:"Policy Fields"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Name"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"dlp"})}),(0,r.jsx)(i.td,{children:"object"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Detects and prevents the exposure of sensitive information such as personally identifiable data, credentials, or confidential terms in model interactions."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"prompt_safety"})}),(0,r.jsx)(i.td,{children:"object"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Protects against manipulation attempts like prompt injections or jailbreaks that try to bypass model restrictions or redirect behavior."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"indirect_prompt_safety"})}),(0,r.jsx)(i.td,{children:"object"}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"\u2014"}),(0,r.jsx)(i.td,{children:"Detects and blocks common security threats in MCP tool usage, such as command injection, path traversal, secrets leakage, and SQL injection."})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"tool-enabledisable-payload",children:"Tool Enable/Disable Payload"}),"\n",(0,r.jsx)(i.p,{children:"Use this payload to enable or disable a specific tool for an MCP server."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yaml",children:"tool:\n  enabled: true\n"})}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Name"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"enabled"})}),(0,r.jsx)(i.td,{children:"boolean"}),(0,r.jsx)(i.td,{children:"Yes"}),(0,r.jsx)(i.td,{children:"Whether the tool is enabled for this MCP server."})]})})]}),"\n",(0,r.jsx)(i.h2,{id:"policy-precedence",children:"Policy Precedence"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"If a request uses a gateway key (X-Javelin-Apikey), the MCP registry policy is applied."}),"\n",(0,r.jsx)(i.li,{children:"If a request uses an application key (X-Javelin-Apikey), the application policy is applied."}),"\n"]})]})}function h(e={}){let{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},88657:(e,i,n)=>{n.d(i,{A:()=>t});let t=n.p+"assets/images/registerMCP-a46f63906be29d1ed2885a04e8c887e4.png"},28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>l});var t=n(96540);let r={},s=t.createContext(r);function d(e){let i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);