"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1942],{3577:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});let t=JSON.parse('{"id":"javelin-core/route-overview","title":"Route Overview","description":"Overview of Javelin Routes and their role in request processing","source":"@site/docs/javelin-core/routeoverview.md","sourceDirName":"javelin-core","slug":"/javelin-core/route-overview","permalink":"/javelin-core/route-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-core/routeoverview.md","tags":[],"version":"current","frontMatter":{"id":"route-overview","title":"Route Overview","description":"Overview of Javelin Routes and their role in request processing","sidebar_label":"Route Overview"},"sidebar":"docsSidebar","previous":{"title":"Provider Overview","permalink":"/javelin-core/provider-overview"},"next":{"title":"MCP Overview","permalink":"/javelin-core/mcp-overview"}}');var r=o(74848),n=o(28453);let s={id:"route-overview",title:"Route Overview",description:"Overview of Javelin Routes and their role in request processing",sidebar_label:"Route Overview"},l="Route Overview",a={},d=[{value:"Why Use Routes?",id:"why-use-routes",level:2},{value:"How Routes Work",id:"how-routes-work",level:2},{value:"Types of Routes",id:"types-of-routes",level:2},{value:"Custom Routes",id:"custom-routes",level:3},{value:"Unified Routes",id:"unified-routes",level:3},{value:"Auto-Provisioning",id:"auto-provisioning",level:3},{value:"Example Use Cases",id:"example-use-cases",level:2}];function c(e){let i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"route-overview",children:"Route Overview"})}),"\n",(0,r.jsxs)(i.p,{children:["In Javelin, ",(0,r.jsx)(i.strong,{children:"routes"})," define how incoming requests from applications are handled\u2014from which model processes the request, to what policies, limits, and behaviors are applied. Each route is a modular unit that connects applications to specific providers with granular control over request flow, safety, and performance."]}),"\n",(0,r.jsx)(i.p,{children:"Routes enable intelligent request processing, allowing different parts of your application to use different models, providers, and configurations, all while maintaining clear visibility and control."}),"\n",(0,r.jsx)(i.h2,{id:"why-use-routes",children:"Why Use Routes?"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Precise Request Routing:"})," Direct traffic to specific providers and models based on route configuration."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Layered Control:"})," Enforce rate limits, retries, archiving, and safety policies independently at the route level."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Isolated Use Cases:"})," Define dedicated routes for distinct workloads\u2014such as Chat Completions, Completions, Embeddings, etc.\u2014tailored to each use case."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Scalable Experimentation:"})," Easily A/B test models or update configurations without affecting other parts of the system."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"how-routes-work",children:"How Routes Work"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Create a Route:"})," Define the route\u2019s name, type (e.g., ",(0,r.jsx)(i.code,{children:"Chat Completions"}),", ",(0,r.jsx)(i.code,{children:"Completions"}),", ",(0,r.jsx)(i.code,{children:"Embedding"}),", etc.), and the provider/model it connects to."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Configure Behavior:"})," Attach policies such as rate limits, retries, archiving, and guardrails directly to the route."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Link to Applications:"})," Routes are called by applications, ensuring each request follows the intended logic, security, and performance requirements."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"types-of-routes",children:"Types of Routes"}),"\n",(0,r.jsx)(i.h3,{id:"custom-routes",children:"Custom Routes"}),"\n",(0,r.jsx)(i.p,{children:"Custom routes allow you to define fully bespoke behavior for a route by specifying a unique payload structure or interacting with custom or internal LLM endpoints. You can control the exact request format, headers, and response parsing logic."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Use for:"})," Integrating proprietary models, APIs that don\u2019t follow standard formats, or specialized ML workflows."]}),"\n",(0,r.jsx)(i.h3,{id:"unified-routes",children:"Unified Routes"}),"\n",(0,r.jsx)(i.p,{children:"Unified routes are flexible and abstracted to support multiple model types under one logical route. They allow dynamic routing based on request metadata, model preferences, or business logic."}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Use for:"})," Centralizing multiple capabilities (e.g., chat + completion) into one route, A/B testing models, or conditional routing to fallback providers."]}),"\n",(0,r.jsx)(i.h3,{id:"auto-provisioning",children:"Auto-Provisioning"}),"\n",(0,r.jsxs)(i.p,{children:["When a provider is created, Javelin system automatically generates a ",(0,r.jsx)(i.strong,{children:"unified route"})," associated with that provider. These are labelled as ",(0,r.jsx)(i.strong,{children:"Reserved"})," routes and are designed to work right out of the box, eliminating the need for additional manual configuration."]}),"\n",(0,r.jsx)(i.p,{children:"These Reserved routes:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Serve as default access points for your providers"}),"\n",(0,r.jsx)(i.li,{children:"Can be edited or extended as needed"}),"\n",(0,r.jsx)(i.li,{children:"Help accelerate development and testing"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"example-use-cases",children:"Example Use Cases"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Create separate routes for different user configurations with different rate-limits and/or guardrails."}),"\n",(0,r.jsx)(i.li,{children:"Set up a low-cost route using open-source models for non-critical requests."}),"\n",(0,r.jsx)(i.li,{children:"Apply stricter policies and logging for production routes compared to experimental ones."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Routes are one of the foundation of Javelin\u2019s traffic control and policy enforcement. They provide the flexibility to scale AI usage safely, efficiently, and with full observability."})]})}function u(e={}){let{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,i,o)=>{o.d(i,{R:()=>s,x:()=>l});var t=o(96540);let r={},n=t.createContext(r);function s(e){let i=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);