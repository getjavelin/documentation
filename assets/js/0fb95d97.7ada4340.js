"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9717],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>g});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(t),y=r,g=u["".concat(l,".").concat(y)]||u[y]||m[y]||i;return t?a.createElement(g,o(o({ref:n},s),{},{components:t})):a.createElement(g,o({ref:n},s))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=y;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[u]="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},4166:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=t(8168),r=(t(6540),t(5680));const i={},o="Quickstart",p={unversionedId:"javelin-langchain-python/quickstart",id:"javelin-langchain-python/quickstart",title:"Quickstart",description:"With your LangChain environment, you can use Javelin by changing the API base and adding Javelin headers",source:"@site/docs/javelin-langchain-python/quickstart.md",sourceDirName:"javelin-langchain-python",slug:"/javelin-langchain-python/quickstart",permalink:"/docs/javelin-langchain-python/quickstart",draft:!1,editUrl:"https://github.com/getjavelin/documentation/tree/main/docs/javelin-langchain-python/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Applications",permalink:"/docs/javelin-core/integration"},next:{title:"Chain Integration",permalink:"/docs/javelin-langchain-python/chain"}},l={},c=[],s={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"quickstart"},"Quickstart"),(0,r.yg)("p",null,"With your LangChain environment, you can use Javelin by changing the API base and adding Javelin headers"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell\x3c!--"},"pip install langchain\npip install langchain-openai\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Code snippet\n\nllm = ChatOpenAI(\n    openai_api_base="https://api.javelin.live/v1/query",\n    openai_api_key=openai_api_key, # OpenAI API key\n    model_kwargs={\n      "extra_headers":{\n        "x-api-key": f"{JAVELIN_API_KEY}", # Javelin API key from admin\n        "x-javelin-route": "sample_route1" # Javelin route to use\n      }\n    },\n    openai_api_base="https://api.javelin.live/v1/query",\n)\n')),(0,r.yg)("p",null,"Below is a sample code to use Javelin with LangChain:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# Example of a simple chat prompt\nfrom langchain_core.output_parsers import StrOutputParser\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_openai import ChatOpenAI\nimport openai, os\n\nprompt = ChatPromptTemplate.from_template("tell me a short joke about {topic}")\n\n# model = ChatOpenAI(model="gpt-4")\nmodel = ChatOpenAI(\n    openai_api_key=os.getenv("OPENAI_API_KEY"),\n    openai_api_base="https://api.javelin.live/v1/query",\n    model_kwargs={\n        "extra_headers":{\n        "x-api-key": f"{os.getenv(\'JAVELIN_API_KEY\')}",\n        "x-javelin-route": "sample_route1", # Javelin route to use\n        }\n    }\n)\n\noutput_parser = StrOutputParser()\n\nchain = prompt | model | output_parser\n\nresponse = chain.invoke({"topic": "ice cream"})\nprint(response)\n')))}m.isMDXComponent=!0}}]);