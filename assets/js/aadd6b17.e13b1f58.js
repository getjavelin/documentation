"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3753],{56445:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>v,frontMatter:()=>s,metadata:()=>n,toc:()=>l});let n=JSON.parse('{"id":"javelin-core/provider-overview","title":"Provider Overview","description":"Overview of Javelin Providers and their role in the AI infrastructure","source":"@site/docs/javelin-core/provideroverview.md","sourceDirName":"javelin-core","slug":"/javelin-core/provider-overview","permalink":"/javelin-core/provider-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-core/provideroverview.md","tags":[],"version":"current","frontMatter":{"id":"provider-overview","title":"Provider Overview","description":"Overview of Javelin Providers and their role in the AI infrastructure","sidebar_label":"Provider Overview"},"sidebar":"docsSidebar","previous":{"title":"Application Overview","permalink":"/javelin-core/application-overview"},"next":{"title":"Route Overview","permalink":"/javelin-core/route-overview"}}');var o=i(74848),t=i(28453);let s={id:"provider-overview",title:"Provider Overview",description:"Overview of Javelin Providers and their role in the AI infrastructure",sidebar_label:"Provider Overview"},a="Provider Overview",d={},l=[{value:"Why Use Providers?",id:"why-use-providers",level:2},{value:"How Providers Work",id:"how-providers-work",level:2}];function c(e){let r={h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"provider-overview",children:"Provider Overview"})}),"\n",(0,o.jsxs)(r.p,{children:["In Javelin, ",(0,o.jsx)(r.strong,{children:"providers"})," define the external AI services that power your routes. They act as the bridge between your application logic and the underlying AI models\u2014whether commercial APIs like OpenAI and Anthropic, open-source models, or fully custom endpoints hosted in your environment."]}),"\n",(0,o.jsx)(r.p,{children:"Providers centralize the configuration needed to authenticate, connect, and communicate with different model sources, making it easy to manage and switch across multiple services."}),"\n",(0,o.jsx)(r.h2,{id:"why-use-providers",children:"Why Use Providers?"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Multi-Model Support:"})," Connect to a wide variety of LLMs from different vendors (or self-hosted) under a unified framework."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Centralized Configuration:"})," Manage API credentials, endpoints, and model parameters in one place for all your routes."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Avoid Vendor Lock-in:"})," Build a resilient AI stack by supporting multiple providers, reducing reliance on a single vendor."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Custom Deployment Ready:"})," Seamlessly integrate with open-source, local, or enterprise-hosted models via configurable custom endpoints."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"how-providers-work",children:"How Providers Work"}),"\n",(0,o.jsxs)(r.ol,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Define a Provider:"})," Each provider configuration includes a name, provider vendor (e.g., OpenAI, Amazon, Custom), API base URL."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Use in Routes:"})," When defining a route, you associate it with a specific provider and its models. This determines how requests are processed."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Swap Without Code Changes:"})," Providers are decoupled from application logic\u2014allowing you to update, switch, or experiment with models without touching your application code."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Providers are a foundational component in Javelin\u2019s architecture, enabling a modular, pluggable approach to AI infrastructure. By abstracting model configuration and connectivity, they make it easier to scale, experiment, and optimize your AI applications."})]})}function v(e={}){let{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>a});var n=i(96540);let o={},t=n.createContext(o);function s(e){let r=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);