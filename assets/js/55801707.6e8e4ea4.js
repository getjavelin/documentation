"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8786],{70755:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});let n=JSON.parse('{"id":"javelin-core/mcp-usage-guides","title":"MCP Guides","description":"Comprehensive guide for Javelin MCP Registries","source":"@site/docs/javelin-core/mcpguides.md","sourceDirName":"javelin-core","slug":"/javelin-core/mcp-usage-guides","permalink":"/javelin-core/mcp-usage-guides","draft":false,"unlisted":false,"editUrl":"https://github.com/getjavelin/documentation/tree/main/docs/javelin-core/mcpguides.md","tags":[],"version":"current","frontMatter":{"id":"mcp-usage-guides","title":"MCP Guides","sidebar_label":"Guides","description":"Comprehensive guide for Javelin MCP Registries"},"sidebar":"docsSidebar","previous":{"title":"Configuration","permalink":"/javelin-core/mcp-configuration"},"next":{"title":"Retries","permalink":"/javelin-core/features/retries"}}');var r=s(74848),t=s(28453);let l={id:"mcp-usage-guides",title:"MCP Guides",sidebar_label:"Guides",description:"Comprehensive guide for Javelin MCP Registries"},a="MCP Guides",o={},c=[{value:"Creating an MCP Registry",id:"creating-an-mcp-registry",level:2},{value:"Tools Tab",id:"tools-tab",level:2},{value:"Policy Tab",id:"policy-tab",level:2},{value:"Details Tab",id:"details-tab",level:2},{value:"Application Graph Tab",id:"application-graph-tab",level:2},{value:"Developer Key Requirement",id:"developer-key-requirement",level:2},{value:"Hitting an MCP Server (Example: DeepWiki)",id:"hitting-an-mcp-server-example-deepwiki",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Chronicles for MCP Requests",id:"chronicles-for-mcp-requests",level:2}];function d(e){let i={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"mcp-guides",children:"MCP Guides"})}),"\n",(0,r.jsx)(i.p,{children:"This guide explains how to create and manage MCP Registries in Javelin, configure policies, enable/disable tools, and integrate them with your Applications."}),"\n",(0,r.jsx)(i.h2,{id:"creating-an-mcp-registry",children:"Creating an MCP Registry"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Navigate to the ",(0,r.jsx)(i.strong,{children:"MCP Registries"})," page within your gateway."]}),"\n",(0,r.jsxs)(i.li,{children:["Click ",(0,r.jsx)(i.strong,{children:"Add MCP Registry"})," button."]}),"\n",(0,r.jsxs)(i.li,{children:["In the ",(0,r.jsx)(i.strong,{children:"Details"})," tab, fill in the required fields (see ",(0,r.jsx)(i.a,{href:"#details-tab",children:"Details Tab"})," for a complete description of each field)."]}),"\n",(0,r.jsxs)(i.li,{children:["Click ",(0,r.jsx)(i.strong,{children:"Save"})," to create the registry."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"MCP Registry Details Tab",src:s(88657).A+"",width:"2378",height:"1624"})}),"\n",(0,r.jsxs)(i.p,{children:["Once an MCP Registry is created, it will appear in the ",(0,r.jsx)(i.strong,{children:"MCP Registries list"}),".",(0,r.jsx)(i.br,{}),"\n","From here, selecting a registry takes you to its dedicated page where you can configure and manage it further."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"MCP Registry List",src:s(9856).A+"",width:"2374",height:"1622"})}),"\n",(0,r.jsx)(i.h2,{id:"tools-tab",children:"Tools Tab"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.strong,{children:"Tools"})," tab allows you to:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"View all tools exposed by the registered MCP server."}),"\n",(0,r.jsx)(i.li,{children:"Enable or disable individual tools for controlled access."}),"\n",(0,r.jsxs)(i.li,{children:["See ",(0,r.jsx)(i.strong,{children:"Vulnerability scan results"})," for each tool."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Whenever you ",(0,r.jsx)(i.strong,{children:"enable/disable a tool"})," or open the ",(0,r.jsx)(i.strong,{children:"Tools tab"}),", Javelin automatically runs a ",(0,r.jsx)(i.strong,{children:"vulnerability scan"})," on that tool.",(0,r.jsx)(i.br,{}),"\n","The results are displayed directly in this tab, showing potential ",(0,r.jsx)(i.strong,{children:"security vulnerabilities"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["This ensures that every tool made available through MCP is continuously assessed for risk, giving developers and admins clear visibility into ",(0,r.jsx)(i.strong,{children:"tool security posture"})," before use."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.img,{alt:"MCP Registry Tools Tab",src:s(71895).A+"",width:"2880",height:"1620"}),"\n",(0,r.jsx)(i.img,{alt:"MCP Registry Tools Vulnerability Scan",src:s(83063).A+"",width:"2880",height:"1626"})]}),"\n",(0,r.jsx)(i.h2,{id:"policy-tab",children:"Policy Tab"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.strong,{children:"Policy"})," tab displays all ",(0,r.jsx)(i.strong,{children:"MCP Registry-level policies"})," currently applied."]}),"\n",(0,r.jsx)(i.p,{children:"Policies ensure safer usage of MCP tools by applying filters such as:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Malicious Instruction Injections"})," \u2013 Defends against prompt injection or jailbreak attempts."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Data Protection"})," \u2013 Prevents exposure of sensitive data like PII, credentials, or secrets."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Security Filters"})," \u2013 Defends against MCP tool vulnerabilities such as command injection, path traversal, secrets leakage, and SQL injection."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["These registry-level guardrails are enforced ",(0,r.jsx)(i.strong,{children:"after a tool response is received"})," when requests are made using an ",(0,r.jsx)(i.strong,{children:"application key"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["For a detailed breakdown of policy fields and configurations, see the ",(0,r.jsx)(i.a,{href:"/javelin-core/mcp-configuration",children:"MCP Configuration Guide"}),"."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"MCP Registry Policy Tab",src:s(49494).A+"",width:"2880",height:"1622"})}),"\n",(0,r.jsx)(i.h2,{id:"details-tab",children:"Details Tab"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.strong,{children:"Details"})," tab provides the core configuration for your MCP Registry.",(0,r.jsx)(i.br,{}),"\n","It includes:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Name"})," \u2013 Unique identifier for your MCP server (e.g., ",(0,r.jsx)(i.code,{children:"deepwiki"}),", ",(0,r.jsx)(i.code,{children:"github"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"URL"})," \u2013 The base URL of the MCP server."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Request URL"})," \u2013 The endpoint Javelin uses to send MCP requests for this server.","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"This URL is automatically generated after registration and is required when connecting LLMs to MCP tools."}),"\n",(0,r.jsxs)(i.li,{children:["Example: ",(0,r.jsx)(i.code,{children:"https://api.javelin.live/v1/mcp/deepwiki"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Description"})," \u2013 A human-readable purpose or context for the MCP registry."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Authorization Token"})," \u2013 Token used to authenticate with the MCP server.","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Store this securely, as it may grant direct access to the MCP server\u2019s tools."}),"\n",(0,r.jsx)(i.li,{children:"The token can be updated at any time if compromised."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"This tab serves as the foundation for connecting Javelin to your MCP server, ensuring all requests are routed securely."}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"MCP Registry Details Tab",src:s(58044).A+"",width:"2880",height:"1626"})}),"\n",(0,r.jsx)(i.h2,{id:"application-graph-tab",children:"Application Graph Tab"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Displays all MCP tools accessed via this application's key."}),"\n",(0,r.jsxs)(i.li,{children:["Shows ",(0,r.jsx)(i.strong,{children:"tool name"}),", ",(0,r.jsx)(i.strong,{children:"MCP server"}),", ",(0,r.jsx)(i.strong,{children:"number of requests"}),", and ",(0,r.jsx)(i.strong,{children:"last used"})," in a graph format."]}),"\n",(0,r.jsx)(i.li,{children:"Helps you analyze MCP tool usage patterns and identify high-traffic integrations."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Application Graph Tab",src:s(64494).A+"",width:"2868",height:"1622"})}),"\n",(0,r.jsx)(i.h2,{id:"developer-key-requirement",children:"Developer Key Requirement"}),"\n",(0,r.jsxs)(i.p,{children:["To interact with MCP servers via Javelin, you need an ",(0,r.jsx)(i.strong,{children:"Application Developer Key"}),"."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["This key is passed in the ",(0,r.jsx)(i.code,{children:"X-Javelin-Apikey"})," header when making requests."]}),"\n",(0,r.jsxs)(i.li,{children:["To learn how to create an Application and generate Developer keys, see the ",(0,r.jsx)(i.a,{href:"/javelin-core/application-usage-guides",children:"Application Guide"}),"."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"hitting-an-mcp-server-example-deepwiki",children:"Hitting an MCP Server (Example: DeepWiki)"}),"\n",(0,r.jsxs)(i.p,{children:["You can invoke MCP servers such as ",(0,r.jsx)(i.strong,{children:"DeepWiki"})," through an OpenAI LLM (e.g., GPT-4.1).",(0,r.jsx)(i.br,{}),"\n","Below is an example ",(0,r.jsx)(i.code,{children:"curl"})," request:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:'curl --location \'https://api-dev.javelin.live/v1/responses\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Bearer {{OPENAI_SECRET_KEY}}\' \\\n--header \'X-Javelin-Apikey: {{APPLICATION_DEVELOPER_KEY}}\' \\\n--data \'{\n      "input": "List all tools which are supported in the 2025-03-26 version of the MCP spec.",\n      "model": "gpt-4.1",\n      "tools": [\n        {\n          "headers": {\n            "Authorization": "Bearer {{APPLICATION_DEVELOPER_KEY}}"\n          },\n          "require_approval": "never",\n          "server_label": "deepwiki",\n          "server_url": "https://api-dev.javelin.live/v1/mcp/deepwiki",\n          "type": "mcp"\n        }\n      ]\n    }\'\n'})}),"\n",(0,r.jsx)(i.h2,{id:"explanation",children:"Explanation"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Authorization: Bearer OPENAI_SECRET_KEY"})," \u2192 Authenticates with the OpenAI LLM provider."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"X-Javelin-Apikey: APPLICATION_DEVELOPER_KEY"})," \u2192 Authenticates the request in Javelin and logs it under the Application."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"tools block"})," \u2192 Connects the LLM to the MCP server (here: ",(0,r.jsx)(i.code,{children:"deepwiki"}),").","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Authorization (inside tools block): Bearer APPLICATION_DEVELOPER_KEY"})," \u2192 Authenticates requests made by the LLM to the MCP server via Javelin Gateway. This ensures the MCP tool invocation is also tracked under the same Application\u2019s Chronicles."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"chronicles-for-mcp-requests",children:"Chronicles for MCP Requests"}),"\n",(0,r.jsxs)(i.p,{children:["Any request made to an MCP server using an ",(0,r.jsx)(i.strong,{children:"Application Developer Key"})," will appear in that Application\u2019s ",(0,r.jsx)(i.strong,{children:"Chronicles tab"}),"."]}),"\n",(0,r.jsx)(i.p,{children:"You will be able to see:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Input sent in the request"}),"\n",(0,r.jsx)(i.li,{children:"Output received in the response"}),"\n",(0,r.jsx)(i.li,{children:"Tool invocations (e.g., DeepWiki calls)"}),"\n",(0,r.jsx)(i.li,{children:"Guardrail checks"}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["This ensures that all MCP-related activity is ",(0,r.jsx)(i.strong,{children:"auditable under the Application"})," whose key was used."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Application Chronicles Tab",src:s(94586).A+"",width:"2880",height:"1618"})})]})}function h(e={}){let{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},94586:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpChronicles-a1d8fed94c38ae12c2dad67cdffbb41f.png"},58044:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpDetails-8918e53c7fa5c297f968e6d1133a3986.png"},64494:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpGraph-b04bb69a8519086352dd47b8b4f3b014.png"},9856:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpList-b98cef943019fa200d103cc21dd7fc80.png"},49494:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpPolicy-22dc21eaf2405c7e3122db1fedcb1267.png"},71895:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpTools-fe4fc75ebe43e9bc103af8d555673e70.png"},83063:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/mcpVulnerabilityScan-cf3eb4842578a8633882ac0360c865b6.png"},88657:(e,i,s)=>{s.d(i,{A:()=>n});let n=s.p+"assets/images/registerMCP-a46f63906be29d1ed2885a04e8c887e4.png"},28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>a});var n=s(96540);let r={},t=n.createContext(r);function l(e){let i=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);